# Site
repository: choiwoonsik/choiwoonsik.github.io
favicon: images/favicon.ico

# Content configuration version
version: 2

# Personal info
name: 최운식
title: JAVA Back-end Developer
email: woonsik.dev@gmail.com
website: https://ws-pace.tistory.com/

# Dark Mode (true/false/never)
darkmode: false

# Social links
# twitter_username: facespics
github_username: choiwoonsik
# stackoverflow_username: "00000001"
# dribbble_username: jekyll
# facebook_username: jekyll
# flickr_username: jekyll
# instagram_username: jameswgrant
# linkedin_username: jameswgrant
# xing_username: jekyll
# pinterest_username: jekyll
# youtube_username: globalmtb
# googleplus_username: +jekyll
# orcid_username: 0000-0000-0000-0000

# Additional icon links
# additional_links:
#   - title: solved.ac 프로필 (백준)
#     icon: fas fa-globe
#     url: https://solved.ac/profile/dnstlr2933
# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
about_title: About Me
about_profile_image: images/profile4.png
about_content: |
  안녕하세요. 백엔드 개발자 최운식입니다.
  - kotlin + Spring Boot 기반 백엔드 개발을 담당하고 있습니다. 
  - 카카오스타일에 재직 중이며 2주 단위 스프린트를 통한 애자일 방식의 개발을 진행하고 있습니다.
  - 개발 / 코드 리뷰를 병행하며 읽기 좋으며 수정하기 좋은 코드를 작성하는 데 많은 관심이 있습니다.
  - 지속적인 기술 학습을 위해 도서 스터디 및 강의를 통해 학습하고 [기술 블로그](https://ws-pace.tistory.com/)에 기록을 병행하고 있습니다.

# Projects Section
# projects_title: Projects

content:
  - title: Work Experience
    layout: list
    content:
      - layout: left
        title: 카카오스타일 프라이싱팀
        sub_title: 백엔드 엔지니어
        caption: 2022.06 ~ 현재
        link: https://github.com/croquiscom
        description: |
          #### [역할]
          * 기존 Node 기반 멤버십 ➡️ Spring 전환 및 개편
            * Spring Batch ItemStream에 비동기 멀티 스레드를 적용하여 1시간 이내에 처리되도록 성능 개선
            * Athena Query 최적화
          * 기존 Node 기반 크롤링 ➡️ Spring 전환
            * Spring Batch, Selenium, Skrape.it을 이용하여 타 사이트 크롤링 Batch 개발
            * IteamStream을 통해 중도 중단될 경우에도 Execution Context에 저장된 인덱스를 기준으로 재시작 가능하도록 적용
          * Github Actions를 사용하여 안정적인 Versioning 배포가 가능하도록 개선 및 롤백 체계 구현
          * GraphQL, QueryDSL을 이용하여 지그재그 내부 중복 상품에 대한 수동/자동 매칭 API 및 Batch 구현 

          #### [사용기술]
          * 언어: Kotlin
          * 프레임워크: Spring Boot, Spring Batch, QueryDsl
          * AWS: Athena, S3, Lambda, EC2
          * DB: MySql, Redis
          * API: DGS + GraphQL
          * 라이브러리: Jenkins, Kafka, Selenium, Github Actions
          * 테스트: JUnit5, Kotest, MockK
          * 툴: Slack, Jira, DataDog, Github Actions, ArgoCD

  - title: Projects # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: 코디네이터 1:1 매칭 패션 플랫폼 [팀] - 스타일멘토
        sub_title: 담당 - Spring Boot 백엔드
        caption: 2021.12 ~ 2022.06
        link: https://github.com/Sigma-i-2022/backend
        # link_text: Project Website
        # additional_links:
        #   - title: GooglePlay
        #     icon: fab fa-google-play
        #     url: https://play.google.com/store/apps/details?id=com.sigmai.stylemento
        #   - title:  Github page for project (eg. sproogen/modern-resume-theme)
        #     icon: fab fa-github
        #     url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          교육부 주관 학생 창업유망팀 300 성장트랙을 목표로 진행
        description: | # this will include new lines to allow paragraphs
          #### [목적]
          * 서비스 이용자에게 개인 코디네이터를 1:1 매칭하여 스타일 피드백 및 고객 맞춤형 코디 서비스를 제공해주는 패션 플랫폼 제작

          #### [인원]
          * 7명 - 백엔드 2명, 안드로이드 2명, 디자이너 1명, 기획 2명

          #### [역할]
          * [토스페이먼츠 PG 시스템](https://ws-pace.tistory.com/category/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/%ED%86%A0%EC%8A%A4%ED%8E%98%EC%9D%B4%EB%A8%BC%EC%B8%A0%20%EA%B2%B0%EC%A0%9C%20%EC%8B%9C%EC%8A%A4%ED%85%9C%20%EC%A0%81%EC%9A%A9%20%EC%8B%9C%EB%A6%AC%EC%A6%88) API를 이용한 결제 시스템 구현
          * 금융결제원 오픈뱅킹 OpenAPI를 이용한 [계좌실명조회 기능 구현](https://ws-pace.tistory.com/231?category=1010992)
          * 기능 단위 패키지 개발 & Git Branch 전략을 통한 협업
          * Junit 5 및 BDD Mockito 를 사용하여 API, DB (JPA), Service 로직 테스트 코드 작성
          * 전체 목록 조회 시 페이징 기법을 적용하여 DB 쿼리 최적화
          * Fetch Join Query문을 통해 Lazy Loading 관계를 포함하는 객체 조회 시 발생하는 N + 1 문제 해결

          #### [문제 해결 경험]
          * 토스페이먼츠 서브몰 등록 API 개발 중 [공식문서 오류 정정기](https://ws-pace.tistory.com/242?category=1010992)

          #### [사용 기술]
          * 언어 : Java
          * 프레임워크 : Spring Boot, Spring Data JPA
          * 서버 : AWS EC2, RDS, S3
          * DB : MySql
          * API: REST API, Swagger
          * 모니터링 : AWS Cloud Watch
          * 외부 API : 토스페이먼츠 PG, 금융결제원 오픈뱅킹 오픈 API
          * 테스트: JUnit5, BDD Mockito

          #### [성과]
          * 교육부 주관 학생 [창업유망팀 300 경진대회 성장트랙 최종 선정](https://user-images.githubusercontent.com/42247724/230699652-ab2b527c-471c-4104-9755-bb622e79d0b1.jpeg)

      - layout: left
        title: 리그오브레전드 스펠/궁극기 체크 도우미 [팀] - 스우미
        sub_title: 담당 - Spring Boot 백엔드
        caption: 2021.07 ~ 2021.10
        link: https://github.com/choiwoonsik/swoomi-backend
        # additional_links:
        #   - title: swoomi
        #     icon: fas fa-globe
        #     url: https://swoomi.me
        quote: >
          해커톤 우승 후 약 3개월의 실제 운영기간 동안 평균 DAU 20 이상 유지
        description: | # this will include new lines to allow paragraphs
          #### [목적]
          * Riot Games API를 활용하여 리그오브레전드 게임 유저들이 쉽고 편리하게 스펠/궁극기 시간을 체크할 수 있는 서비스 제작

          #### [인원]
          * 5명 - 백엔드 2명, 프론트 2명, 디자이너 1명

          #### [역할]
          * Redis 기반 캐시메모리 적용으로 쿼리 최적화 및 50% 응답속도 개선
          * nGrinder를 이용해 가상 트래픽 발생을 통한 서버 내구성 테스트
          * HiKariCP를 이용해 DB 커넥션 풀 관리
          * Junit4를 이용해 통합 테스트 진행
          * [Web Socket을 이용해 실시간 팀원 간 정보 동기화 구현](https://ws-pace.tistory.com/category/Web/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8%20WebSocket%20%EC%A0%81%EC%9A%A9%EA%B8%B0)
          * Git web hook + Jenkins를 이용한 CI/CD 구현 및 Slack 연동
          * 도메인 구매 후 TLS를 이용해 HTTPS 적용
          * Spring boot mail을 이용해 예외 발생 시 지정된 이메일로 에러 내용 발송

          #### [문제 해결 경험]
          * 트랜잭션 Uncheck 예외 발생 시 [Rollback only 활성화 이슈](https://ws-pace.tistory.com/138?category=962975)
          * [SYN Flooding Attack(DDos) 대응 정리](https://ws-pace.tistory.com/207?category=962975)
          * 서버 트래픽 급증으로 인한 [DB 커넥션 부족 이슈](https://ws-pace.tistory.com/245?category=967986)

          #### [사용 기술]
          * 언어 : Java
          * 프레임워크 : Spring Boot, Spring Data JPA
          * 서버 : AWS EC2, RDS, Route 53
          * DB : MySql
          * API: REST API, Swagger
          * DevOps : Jenkins + Github WebHook
          * 외부 API : [Orianna](https://github.com/meraki-analytics/orianna)

          #### [성과]
          * 제 1회 OPGG 정보통신 경진대회 우승
          * 약 3달간 실제 서비스 운영 및 [평균 DAU 20 이상 달성](https://www.notion.so/woonsik/DAU-8c520326005146758a0e23bc0c82ef78)

          #### [참고 자료]
          * [프론트](https://github.com/OPGG-HACKTHON/web-c-client)
          * OPGG 해커톤 우승 [인터뷰](https://m.post.naver.com/viewer/postView.naver?volumeNo=32651307&memberNo=24985926) 및 [수료증](https://hackathon.op.gg/users/yZezVI4Zhc)

        # [후기]
        # * 3개월간의 해커톤을 진행하며 백엔드, 프론트엔드, 디자이너 간 협업의 중요성을 깨달았습니다.
        # * 일정을 맞추기 위해 서비스의 일정 부분을 포기하고 기한을 맞춰야 하는 과정을 통해 일정 관리의 필요성을 배웠습니다.
        # * 높은 트래픽 발생 가능성을 항상 염두에 두고 대처할 수 있도록 설계해야 함을 배웠습니다.
        # * 트랜잭션 격리 수준, 비동기 처리를 통해 속도를 향상할 수 있지만 동시에 동시성 문제를 초래하는 trade-off 관계를 배웠습니다.

      - layout: left
        title: 스프링 부트 웹 애플리케이션 [개인]
        sub_title: 담당 - 전체
        caption: 2021.05 ~ 2021.07
        additional_links:
          - title: 깃허브
            icon: fab fa-github
            url: https://github.com/choiwoonsik/springboot_RestApi_App_Project
          - title: 블로그 정리
            icon: fas fa-globe
            url: https://ws-pace.tistory.com/category/Web/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8%20RestAPI%20%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8
        quote:
        description: |
          #### [목적]
          * 스프링 부트 기반 백엔드를 제작하여 MVC 구조, REST API, OAuth 2.0 관련 학습 목표

          #### [역할]
          * RestControllerAdvice + ExceptionHandler를 이용한 [통합 에러 처리 구현](https://ws-pace.tistory.com/71?category=964036)
          * [제네릭스를 이용한 응답 모델 구조화](https://ws-pace.tistory.com/70?category=964036)를 통해 일정한 형식을 갖는 응답 구현
          * Spring Security + JWT을 이용해 Access Token, Refresh Token을 사용하는 [토큰 기반 인증 구현](https://ws-pace.tistory.com/82?category=964036)
          * [OAuth2.0을 이용하여 카카오 간편 로그인 구현](https://ws-pace.tistory.com/100?category=964036)
          * JUnit을 이용하여 MockUser 테스트 등 [단위](https://ws-pace.tistory.com/91)/[통합](https://ws-pace.tistory.com/92) 테스트 진행

          #### [사용 기술]
          * 언어 : Java
          * 프레임워크 : Spring Boot, Spring Data Jpa, Spring Security
          * 서버 : AWS EC2
          * DB : H2
          * API: REST API, Swagger

        # [후기]
        # * Entity, DAO, DTO를 이용해 역할에 따라 객체를 만들어 적용해보면서 분리의 이유를 배웠습니다.
        # * Jwt을 적용하기 위해 Spring Security의 절차 과정을 배웠으며 OAuth2.0을 적용해보며 클라이언트와 서버, OAuth 서버간의 통신 메커니즘을 배웠습니다.
        # * JWT의 내부 구조 및 작동 원리, 장단점에 대해 배웠습니다.

  - title: Blog
    layout: list
    content:
      - layout: left
        title: 개인 기술블로그
        link: https://ws-pace.tistory.com/
        quote: >
          일일 300명 이상 방문
        description: |
          * 학습 중 맞닥뜨렸던 문제점들에 대한 해결 경험과 학교 및 인터넷 강의, 알고리즘 등 공부한 내용들을 꾸준하게 정리하기 위한 블로그
          * [CS - 전공 수업 정리](https://ws-pace.tistory.com/category/CS)
          * [알고리즘 문제풀이 정리](https://ws-pace.tistory.com/category/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80)
      # * [토스페이먼츠 PG 연동 시리즈](https://ws-pace.tistory.com/category/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/%ED%86%A0%EC%8A%A4%ED%8E%98%EC%9D%B4%EB%A8%BC%EC%B8%A0%20%EA%B2%B0%EC%A0%9C%20%EC%8B%9C%EC%8A%A4%ED%85%9C%20%EC%A0%81%EC%9A%A9%20%EC%8B%9C%EB%A6%AC%EC%A6%88)
      # * [REST API 스프링 부트 프로젝트](https://ws-pace.tistory.com/category/Web/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8%20RestAPI%20%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8)

  - title: Skill
    layout: list
    content:
      - layout: left
        title: 백엔드 기술 스택
        description: |
          * 언어: Java, Kotlin
          * 프레임워크: Spring(Boot, Batch, MVC, Security, Data JPA)
          * AWS: EC2, RDS, S3, Lambda, Cloud Watch
          * DB: MySql, Redis, QueryDsl
          * API: GraphQL, REST API
          * 테스트: JUnit4/5, Kotest, BDD Mockito, MockK, nGrinder
          * 외부 툴: Linux, Git/Github, Github Actions, Jenkins, Gradle

  - title: Education # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: 상명대학교
        sub_title: SW융합학부 컴퓨터과학전공
        caption: |
          2016.03 - 2023.02 (졸업)
        quote:
        description: | # this will include new lines to allow paragraphs
          [전공 과목]
          * [운영체제](https://ws-pace.tistory.com/category/CS/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C%20%EC%A0%95%EB%A6%AC), [네트워크](https://ws-pace.tistory.com/category/CS/OSI%207%EA%B3%84%EC%B8%B5%20%EC%A0%95%EB%A6%AC), 리눅스 프로그래밍 수업 등을 들으며 컴퓨터 내외 전반적인 프로토콜에 대한 지식 함양
          * 알고리즘, 자료구조 수업을 통해 다양한 자료구조 및 알고리즘에 대한 접근 방법과 풀이 방법 학습
          * 객체지향 프로그래밍 수업을 통해 다양한 [디자인 패턴](https://ws-pace.tistory.com/category/CS/GoF%EC%9D%98%20Design%20Pattern%20%EC%A0%95%EB%A6%AC)의 구조 및 활용 방법 학습

      - layout: left
        title: 42 서울
        caption: 2020.05 ~ 2020.09
        link: https://github.com/choiwoonsik/my42-Seoul
        quote:
        description: |
          * Linux manual과 C언어 책을 참고해 구현 목적과 입력, 반환 값 등 내부 구조를 바탕으로 printf() 등 C 라이브러리 함수 구현 과제 수행

      - layout: left
        title: 알고리즘
        caption: |
          2020 ~ 현재
        description: |
          * [백준 프로필](https://www.acmicpc.net/user/dnstlr2933)
          * [solved.ac 프로필](https://solved.ac/profile/dnstlr2933/history)

  # - title: 외부활동
  #   layout: text
  #   content: | # this will include new lines to allow paragraphs
  #     기술 블로그를 운영중에 있습니다.

# Footer
footer_show_references: true
references_title: References on request (Override references text)

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
  - jekyll-seo-tag
